// lib/main.dart
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:snaphunt/screens/home_screen.dart';
import 'firebase_options.dart';  // FlutterFire CLI generated Firebase config file

/// ---------------------------------------------------------------------------
/// Entry point
/// ---------------------------------------------------------------------------
/// Purpose
/// - Initialize Firebase for this platform (Android/iOS/Web/Desktop),
///   then launch the Flutter app.
///
/// Notes
/// - `firebase_options.dart` is generated by `flutterfire configure` and must
///   be checked into the repo so everyone runs with the same Firebase project.
/// - Tests usually **donâ€™t** execute this file; they inject `FakeFirebaseFirestore`
///   and pump screens directly.
/// ---------------------------------------------------------------------------
Future<void> main() async {
  // Make sure plugins (like Firebase) can talk to the Flutter engine
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase using the platform-specific config (from FlutterFire CLI)
  await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
  );

  // OPTIONAL (dev-only): Point Firestore at the local emulator.
  // This keeps our dev testing safe and fast without hitting production.
  // Wrap in `assert` so it compiles out in release builds.
  /*
  assert(() {
    // If you start the Emulator Suite:
    // firebase emulators:start --only firestore
    FirebaseFirestore.instance.useFirestoreEmulator('localhost', 8080);
    return true;
  }());
  */

  // Launch the Flutter app
  runApp(const SnapHuntApp());  // Launch app
}

/// ---------------------------------------------------------------------------
/// SnapHuntApp (root widget)
/// ---------------------------------------------------------------------------
/// - Sets global Material theme + app title
/// - Hides the red "DEBUG" banner for cleaner screenshots
/// - Starts on HomeScreen (Host / Join hub)
/// ---------------------------------------------------------------------------
class SnapHuntApp extends StatelessWidget {
  const SnapHuntApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      // Hide top-right debug banner in dev builds
      debugShowCheckedModeBanner: false,

      // Shown in task switchers and the web tab title
      title: 'SnapHunt (Dev)',

      // Simple brand theme; we can tune later
      theme: ThemeData(
          useMaterial3: true,
          colorSchemeSeed: Colors.teal
      ),

      // App entry point: the landing hub with Host / Join
      home: const HomeScreen(), // Temporary dev entry: tap + to create a game and see the join code.

    );
  }
}
